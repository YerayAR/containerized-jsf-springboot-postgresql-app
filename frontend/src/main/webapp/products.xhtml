<!--
P√°gina JSF (JavaServer Faces) para mostrar el cat√°logo de productos.
Utiliza Facelets como tecnolog√≠a de plantillas.
xmlns:h -> Librer√≠a de componentes HTML de JSF.
xmlns:f -> Librer√≠a de "core" de JSF, para conversores, validadores, etc.
xmlns:ui -> Librer√≠a de Facelets para plantillas.
-->
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
<h:head>
    <title>Cat√°logo de Productos</title>
    <!-- Estilos CSS para la p√°gina. Se incluyen directamente para simplicidad. -->
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background-color: #f5f5f5; }
        .container { max-width: 1200px; margin: 0 auto; background-color: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .nav-bar { background-color: #007bff; padding: 15px; margin-bottom: 20px; border-radius: 4px; }
        .nav-bar a { color: white; text-decoration: none; margin-right: 20px; font-weight: bold; }
        h1 { color: #333; text-align: center; margin-bottom: 30px; }
        .stats-bar { background-color: #e7f3ff; padding: 15px; border-radius: 8px; margin-bottom: 20px; text-align: center; }
        .btn { padding: 10px 20px; background-color: #007bff; color: white; border: none; border-radius: 4px; cursor: pointer; margin-left: 10px; }
        .btn-refresh { background-color: #28a745; }
        .products-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 20px; }
        .product-card { background-color: white; border: 1px solid #ddd; border-radius: 8px; padding: 20px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .product-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px; }
        .product-id { background-color: #6c757d; color: white; padding: 2px 8px; border-radius: 12px; font-size: 12px; }
        .product-name { font-size: 18px; font-weight: bold; color: #333; }
        .product-description { color: #666; margin-bottom: 15px; }
        .product-price { font-size: 24px; font-weight: bold; color: #28a745; }
        .product-category { background-color: #e7f3ff; color: #0056b3; padding: 4px 12px; border-radius: 4px; font-size: 14px; display: inline-block; }
        .status-active { color: #28a745; }
        .status-inactive { color: #dc3545; }
        .products-table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        .products-table th, .products-table td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
        .products-table th { background-color: #f8f9fa; }
        .view-toggle { margin-bottom: 20px; }
        .view-toggle button { padding: 8px 16px; margin-right: 10px; border: 1px solid #ddd; background-color: #f8f9fa; cursor: pointer; }
        .view-toggle button.active { background-color: #007bff; color: white; }
        .no-products { text-align: center; padding: 40px; color: #666; }
    </style>
</h:head>
<h:body>
    <div class="container">
        <!-- Barra de navegaci√≥n -->
        <div class="nav-bar">
            <a href="index.xhtml">üè† Inicio</a>
            <a href="products.xhtml">üì¶ Productos</a>
            <a href="admin.xhtml">‚öôÔ∏è Panel de Admin</a>
            <a href="login.xhtml">üîê Iniciar Sesi√≥n</a>
        </div>
        
        <h1>üì¶ Cat√°logo de Productos</h1>
        
        <!-- Barra de estad√≠sticas que muestra el n√∫mero total de productos -->
        <div class="stats-bar">
            <h3>Total de Productos: #{productBean.products.size()}</h3>
        </div>
        
        <!-- Formulario JSF que contiene la l√≥gica de la vista -->
        <h:form id="productForm">
            <!-- Botones para cambiar entre vista de tarjeta y vista de tabla -->
            <div class="view-toggle">
                <button type="button" class="active" onclick="showCards()">üé¥ Vista de Tarjetas</button>
                <button type="button" onclick="showTable()">üìä Vista de Tabla</button>
                <!-- Bot√≥n para refrescar la lista de productos, llama al m√©todo init() del bean -->
                <h:commandButton value="üîÑ Refrescar" action="#{productBean.init}" class="btn btn-refresh"/>
            </div>
            
            <!-- Vista de Tarjetas (Grid) -->
            <!-- Se utiliza ui:repeat para iterar sobre la lista de productos y renderizar una tarjeta para cada uno -->
            <div id="cardView" class="products-grid">
                <ui:repeat value="#{productBean.products}" var="product" rendered="#{not empty productBean.products}">
                    <div class="product-card">
                        <div class="product-header">
                            <span class="product-id">ID: #{product.id}</span>
                            <span class="product-status #{product.active ? 'status-active' : 'status-inactive'}">
                                #{product.active ? '‚úÖ Activo' : '‚ùå Inactivo'}
                            </span>
                        </div>
                        <div class="product-name">#{product.name}</div>
                        <p class="product-description">#{product.description}</p>
                        <div class="product-price">
                            <!-- f:convertNumber formatea el precio como una moneda -->
                            <h:outputText value="#{product.price}">
                                <f:convertNumber type="currency" currencySymbol="$"/>
                            </h:outputText>
                        </div>
                        <div class="product-category">#{product.category}</div>
                    </div>
                </ui:repeat>
            </div>
            
            <!-- Vista de Tabla -->
            <!-- h:dataTable renderiza una tabla HTML a partir de los datos -->
            <div id="tableView" style="display: none;">
                <h:dataTable value="#{productBean.products}" var="product" 
                             styleClass="products-table" 
                             rendered="#{not empty productBean.products}">
                    <h:column><f:facet name="header">ID</f:facet>#{product.id}</h:column>
                    <h:column><f:facet name="header">Nombre</f:facet><strong>#{product.name}</strong></h:column>
                    <h:column><f:facet name="header">Descripci√≥n</f:facet>#{product.description}</h:column>
                    <h:column>
                        <f:facet name="header">Precio</f:facet>
                        <h:outputText value="#{product.price}"><f:convertNumber type="currency" currencySymbol="$"/></h:outputText>
                    </h:column>
                    <h:column><f:facet name="header">Categor√≠a</f:facet><span class="category">#{product.category}</span></h:column>
                    <h:column>
                        <f:facet name="header">Estado</f:facet>
                        <span class="#{product.active ? 'status-active' : 'status-inactive'}">
                            #{product.active ? '‚úÖ Activo' : '‚ùå Inactivo'}
                        </span>
                    </h:column>
                </h:dataTable>
            </div>
            
            <!-- Mensaje que se muestra si no hay productos -->
            <h:panelGroup rendered="#{empty productBean.products}">
                <div class="no-products">
                    <h3>‚ö†Ô∏è No se encontraron productos</h3>
                    <p>El cat√°logo est√° vac√≠o o hay un problema de conexi√≥n con el backend.</p>
                </div>
            </h:panelGroup>
        </h:form>
    </div>
    
    <!-- Script de JavaScript para manejar el cambio entre vistas -->
    <script>
        function showCards() {
            document.getElementById('cardView').style.display = 'grid';
            document.getElementById('tableView').style.display = 'none';
            document.querySelectorAll('.view-toggle button').forEach(btn => btn.classList.remove('active'));
            event.currentTarget.classList.add('active');
        }
        
        function showTable() {
            document.getElementById('cardView').style.display = 'none';
            document.getElementById('tableView').style.display = 'block';
            document.querySelectorAll('.view-toggle button').forEach(btn => btn.classList.remove('active'));
            event.currentTarget.classList.add('active');
        }
    </script>
</h:body>
</html>
